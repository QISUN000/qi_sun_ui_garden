{"version":3,"file":"components-Dropdown-Dropdown-stories.33b18a27.iframe.bundle.js","mappings":";;;AAOA;AACA;;AAEA;;;;;AAKA;;AAEA;AAGA;;;;;;;;;;;AAWA;;;;;;;;;AAWA","sources":["webpack://qi_sun_ui_garden/./src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DropdownProps } from './Dropdown.types';\r\n\r\nconst DropdownContainer = styled.div<{ $disabled?: boolean }>`\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: ${(p) => (p.$disabled ? 'not-allowed' : 'pointer')};\r\n  opacity: ${(p) => (p.$disabled ? 0.6 : 1)};\r\n  padding: 0.75rem 1.25rem;\r\n  background-color: ${(p) => (p.$disabled ? '#E5E7EB' : '#3B82F6')};\r\n  color: white;\r\n  border-radius: 4px;\r\n\r\n  &:hover:not(:disabled) {\r\n    background: ${'#2563EB'}; \r\n  }\r\n`;\r\n\r\nconst DropdownList = styled.ul<{ $isOpen: boolean }>`\r\n  display: ${(p) => (p.$isOpen ? 'block' : 'none')};\r\n  position: absolute;\r\n  background-color: #f9f9f9;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  top: 100%;\r\n  left: 0;\r\n`;\r\n\r\nconst DropdownItem = styled.li`\r\n  padding: 0.75rem 1rem;\r\n  color: black;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n`;\r\n\r\nexport const Dropdown = ({ options, disabled, onSelect }: DropdownProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    if (!disabled) {\r\n      setIsOpen(!isOpen);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (option: string) => {\r\n    if (!disabled) {\r\n      onSelect(option);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DropdownContainer $disabled={disabled} onClick={handleToggle}>\r\n      Select an option\r\n      <DropdownList $isOpen={isOpen}>\r\n        {options.map((option, index) => (\r\n          <DropdownItem \r\n            key={index} \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleSelect(option);\r\n            }}\r\n          >\r\n            {option}\r\n          </DropdownItem>\r\n        ))}\r\n      </DropdownList>\r\n    </DropdownContainer>\r\n  );\r\n};"],"names":[],"sourceRoot":""}